// Code generated by Microsoft (R) AutoRest Code Generator 0.12.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.WebSites.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// This is an object used to store a full view of network features
    /// (presently VNET integration and Hybrid Connections)
    /// for a web app.
    /// </summary>
    public partial class NetworkFeatures : Resource
    {
        /// <summary>
        /// Initializes a new instance of the NetworkFeatures class.
        /// </summary>
        public NetworkFeatures() { }

        /// <summary>
        /// Initializes a new instance of the NetworkFeatures class.
        /// </summary>
        public NetworkFeatures(string virtualNetworkName = default(string), VnetInfo virtualNetworkConnection = default(VnetInfo), IList<RelayServiceConnectionEntity> hybridConnections = default(IList<RelayServiceConnectionEntity>))
        {
            VirtualNetworkName = virtualNetworkName;
            VirtualNetworkConnection = virtualNetworkConnection;
            HybridConnections = hybridConnections;
        }

        /// <summary>
        /// The Vnet Name
        /// </summary>
        [JsonProperty(PropertyName = "properties.virtualNetworkName")]
        public string VirtualNetworkName { get; set; }

        /// <summary>
        /// The Vnet Summary view
        /// </summary>
        [JsonProperty(PropertyName = "properties.virtualNetworkConnection")]
        public VnetInfo VirtualNetworkConnection { get; set; }

        /// <summary>
        /// The Hybrid Connections Summary view
        /// </summary>
        [JsonProperty(PropertyName = "properties.hybridConnections")]
        public IList<RelayServiceConnectionEntity> HybridConnections { get; set; }

        /// <summary>
        /// Validate the object. Throws ArgumentException or ArgumentNullException if validation fails.
        /// </summary>
        public override void Validate()
        {
            base.Validate();
            if (this.VirtualNetworkConnection != null)
            {
                this.VirtualNetworkConnection.Validate();
            }
            if (this.HybridConnections != null)
            {
                foreach (var element in this.HybridConnections)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
