// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator 0.12.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.Intune.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// OperationResult entity for Intune.
    /// </summary>
    public partial class OperationResult : Resource
    {
        /// <summary>
        /// Initializes a new instance of the OperationResult class.
        /// </summary>
        public OperationResult() { }

        /// <summary>
        /// Initializes a new instance of the OperationResult class.
        /// </summary>
        public OperationResult(string friendlyName, IList<OperationMetadataProperties> operationMetadata, string category = default(string), string lastModifiedTime = default(string), string state = default(string))
        {
            FriendlyName = friendlyName;
            Category = category;
            LastModifiedTime = lastModifiedTime;
            State = state;
            OperationMetadata = operationMetadata;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.category")]
        public string Category { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastModifiedTime")]
        public string LastModifiedTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public string State { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.operationMetadata")]
        public IList<OperationMetadataProperties> OperationMetadata { get; set; }

        /// <summary>
        /// Validate the object. Throws ArgumentException or ArgumentNullException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (FriendlyName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FriendlyName");
            }
            if (OperationMetadata == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "OperationMetadata");
            }
            if (this.OperationMetadata != null)
            {
                foreach (var element in this.OperationMetadata)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
